pipeline{

agent any


parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Select Branch Name', name: 'BranchName'
}


tools{
maven "maven3.8.5"
}

triggers {
  pollSCM('* * * * *')
   //cron('* * * * *')
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  }


stages{

//Get the code from GitHub
stage('CheckoutCode'){
steps{
    slacknotifications("STARTED")
    
git branch: "$(params.Branchname)", credentialsId: '1ecde0d4-8c29-47a6-af82-9fee50b8d63c', url: 'https://github.com/yomaic2015/maven-web-application.git'
}
}  

//Do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn sonar:sonar"
}
}

//Upload Artificats into Nexus repo
stage ('UploadArtifactintoNexus'){
steps{
sh "mvn deploy"
}
}

//Deploy Application into Tomcat Server
 stage('DeployAppIntoTomcatServer'){
steps{
sshagent(['03e4ec72-5bf7-40ab-9307-d79ef0de7ef7']){
 sh "scp -o StrictHostkeyChecking=no target/maven-web-application.war ec2-user@35.182.38.2:/opt/apache-tomcat-9.0.64/webapps/"
}
}
}


}//stages closing
post {
  success {
   slacknotifications(currentBuild.result)
  }
  failure {
   slacknotifications(currentBuild.result)
  }
}

}//pipeline CLosing


def slacknotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


