node 
{

def mavenHome = tool name: "maven3.8.5"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "The job name is: ${env.JOB_NAME}"

echo "The branch name is: ${env.BRANCH_NAME}"

echo "The node name is : ${env.NODE_NAME}"

echo "The workspace path is: ${env.WORKSPACE}"

echo "The node label is: ${env.NODE_LABELS}"

echo "The build number is: ${env.BUILD_NUMBER}"

try{
slacknotifications("STARTED")


stage ('CheckoutCode'){
git branch: 'development', credentialsId: '1ecde0d4-8c29-47a6-af82-9fee50b8d63c', url: 'https://github.com/yomaic2015/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

/*
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAppIntoTomcatServer'){
sshagent(['03e4ec72-5bf7-40ab-9307-d79ef0de7ef7']) {
  sh "scp -o StrictHostkeyChecking=no target/maven-web-application.war ec2-user@35.182.38.2:/opt/apache-tomcat-9.0.64/webapps/"
}
}

*/
}
catch(e){
currentBuild.result = "FAILURE"
throw e
}
finally{
slacknotifications("currentBuild.result")
}

}// Node Closing

def slacknotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


